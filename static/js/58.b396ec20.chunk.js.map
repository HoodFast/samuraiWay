{"version":3,"file":"static/js/58.b396ec20.chunk.js","mappings":"sKACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA0I,wBAA1I,EAA6K,0BAA7K,EAAiN,yB,SCKpMA,EAAU,SAACC,GACpB,OACI,gBAAKC,UAAWC,EAAU,SACrBF,EAAMG,SAGnB,E,UCJaC,EAAa,SAACJ,GACvB,IAAIK,EAAO,YAAcL,EAAMM,GAC/B,OACI,gBAAKL,UAAWC,EAAW,IAAMA,EAAS,UACtC,SAAC,KAAO,CAACK,GAAIF,EAAK,SAAEL,EAAMQ,QAGtC,E,wCCde,SAASC,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAC5B,IACIE,EAAKC,EADLC,ECHS,SAAuCJ,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAC5B,IAEIE,EAAKC,EAFLC,EAAS,CAAC,EACVC,EAAaC,OAAOC,KAAKP,GAE7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAEvB,OAAOE,CACT,CDRe,CAA6BJ,EAAQC,GAElD,GAAIK,OAAOI,sBAAuB,CAChC,IAAIC,EAAmBL,OAAOI,sBAAsBV,GACpD,IAAKG,EAAI,EAAGA,EAAIQ,EAAiBH,OAAQL,IACvCD,EAAMS,EAAiBR,GACnBF,EAASQ,QAAQP,IAAQ,GACxBI,OAAOM,UAAUC,qBAAqBC,KAAKd,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,GAEzB,CACA,OAAOE,CACT,C,2BENMW,EAA6B,SAACC,GAChC,MAAO,CACHC,OAAQD,EAAME,KAAKD,OAE3B,E,ICeaE,GAAmBC,E,QAAAA,KAC5BC,EAAAA,EAAAA,KAhBkB,SAACL,GACnB,MAAM,CACFM,YAAaN,EAAMM,YAG3B,IACyB,SAACC,GACtB,MAAM,CACFC,kBAAmB,SAAC/B,GAChB8B,GAASE,EAAAA,EAAAA,GAAyBhC,GACtC,EAER,KDVO,SAA6BiC,GAUhC,OAFqCL,EAAAA,EAAAA,IAAQN,EAARM,EANX,SAAC/B,GACvB,IAAK2B,EAAwB3B,EAAxB2B,OAAWU,EAAS,EAAIrC,EAAK,GAClC,OAAK2B,GACE,SAACS,GAAS,UAAKC,KADF,SAAC,KAAQ,CAAC9B,GAAI,UAEtC,GAKJ,GCEgCuB,ECZT,SAAC9B,GAEpB,IAAI0B,EAAQ1B,EAAMgC,YACZM,EAAiBZ,EAAMa,QAAQC,KAAI,SAAAC,GAAM,OAAI,SAACrC,EAAU,CAAiBI,KAAMiC,EAAOjC,KAAMF,GAAImC,EAAOnC,IAAzCmC,EAAOnC,GAAuC,IAC5GoC,EAAiBhB,EAAMiB,SAASH,KAAI,SAAArC,GAAO,OAAI,SAACJ,EAAO,CAAkBI,QAASA,EAAQA,SAA7BA,EAAQG,GAA+B,IAI1G,OACI,iBAAKL,UAAWC,EAAU,WACtB,gBAAKD,UAAWC,EAAe,SAC1BoC,KAEL,gBAAKrC,UAAWC,EAAW,SACtBwC,KAEL,0BACI,SAACE,EAAA,EAAc,CAACC,gBAZJ,SAACC,GACrB9C,EAAMkC,kBAAkBY,EAAOC,SACnC,QAcJ,G","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogItem/DialogItem.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/hoc/withAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__srMu3\",\"dialogsItems\":\"Dialogs_dialogsItems__9Efcb\",\"dialog\":\"Dialogs_dialog__Kp6si\",\"active\":\"Dialogs_active__ERERG\",\"messages\":\"Dialogs_messages__lTidl\",\"message\":\"Dialogs_message__0JNzE\"};","import s from \"../Dialogs.module.css\";\r\n\r\ntype PropsMessage = {\r\n    message: string\r\n}\r\n\r\nexport const Message = (props: PropsMessage) => {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}","import s from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsDialogType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nexport const DialogItem = (props: PropsDialogType) => {\r\n    let path = \"/dialogs/\" + props.id\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import {Navigate} from \"react-router-dom\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {AppStateType} from \"../../Redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToPropsForRedirect = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n\r\n    const RedirectComponent = (props: MapStatePropsType) => {\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Navigate to={'/login'}/>\r\n        return <Component {...restProps as T & {} }/>\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","import React from 'react';\r\nimport {addNewMessageTextCreator} from \"../../Redux/dialogs-reducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../Redux/redux-store\";\r\nimport {Dispatch} from \"react\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\"\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps=(state:AppStateType)=>{\r\n    return{\r\n        dialogsPage: state.dialogsPage,\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps=(dispatch:Dispatch<any>)=>{\r\n    return{\r\n        addNewMessageText: (message)=>{\r\n            dispatch(addNewMessageTextCreator(message))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const DialogsContainer = compose<React.ComponentType>(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs)\r\n\r\n\r\n\r\n","import s from './Dialogs.module.css'\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport React from \"react\";\r\nimport {dialogsPageType} from \"../../App\";\r\nimport {AddMessageForm} from \"./addMessageForm/AddMessageForm\";\r\n\r\n\r\n\r\ntype dialogsPropsStateType = {\r\n    addNewMessageText: (message:string) => void\r\n    dialogsPage: dialogsPageType\r\n    isAuth: boolean\r\n}\r\n\r\n\r\nexport const Dialogs = (props: dialogsPropsStateType) => {\r\n\r\n    let state = props.dialogsPage\r\n    const dialogsDataMap = state.dialogs.map(dialog => <DialogItem key={dialog.id} name={dialog.name} id={dialog.id}/>)\r\n    const messageDataMap = state.messages.map(message => <Message key={message.id} message={message.message}/>)\r\n    const onSubmitHandler = (values: { textarea: string }) => {\r\n        props.addNewMessageText(values.textarea)\r\n    }\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsDataMap}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messageDataMap}\r\n            </div>\r\n            <div>\r\n                <AddMessageForm onSubmitHandler={onSubmitHandler}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n"],"names":["Message","props","className","s","message","DialogItem","path","id","to","name","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","mapStateToPropsForRedirect","state","isAuth","auth","DialogsContainer","compose","connect","dialogsPage","dispatch","addNewMessageText","addNewMessageTextCreator","Component","restProps","dialogsDataMap","dialogs","map","dialog","messageDataMap","messages","AddMessageForm","onSubmitHandler","values","textarea"],"sourceRoot":""}